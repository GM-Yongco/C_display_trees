these are sample binary tree outputs

------A
----/---\
--B-------C
-/-\-----/-\
D---E---F---G

14------------A
10--------/---7---\
6-----B------15-------C
4---/---\----11-----/---\
2-D---7---E---7---F---7---G
-/-\--5--/-\--5--/-\--5--/-\
H-3-I---J---K---L---M---N---O

depth : number of lines
1 : 1
2 : 3
3 : 5
4 : 7

depht : number of characters on base/width
1 : 1
2 : 5   = 1 + 2 + 3
3 : 13  = 5 + 5 + 3
4 : 29  = 13 + 13 + 3

depth : max elements
1 : 1
2 : 3 	= 1 + 2
3 : 7 	= 3 + 4
4 : 15	= 7 + 8

depth: elem_num: height_index: width_index
2	: 1		:0: 2 = width/2

2	: 2		:2: 0
2	: 3		:2: 4 = width-1

-----------------------------

3	: 1		:0: 6 = width/2

3	: 2		:2: 2
3	: 3		:2: 10 = 2 + 2 + width/2

3	: 4		:4: 0
3	: 5		:4: 4
3	: 6		:4: 8
3	: 7		:4: 12 = width-1

-----------------------------

4	: 1		:0: 14 = width/2

4	: 2		:2: 6
4	: 3		:2: 22 = 6 + 2 + width/2 

4	: 4		:4: 2
4	: 5		:4: 10
4	: 6		:4: 18
4	: 7		:4: 26

4	: 8		:6: 0
4	: 9		:6: 4
4	: 10	:6: 8
4	: 11	:6: 12
4	: 12	:6: 16
4	: 13	:6: 20
4	: 14	:6: 24
4	: 15	:6: 28 = width-1